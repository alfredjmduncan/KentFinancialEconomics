# -*- coding: utf-8 -*-
"""
Created on Mon Jul 11 10:21:31 2022

Original functions written in Julia by Alfred Duncan:

https://github.com/alfredjmduncan/KentFinancialEconomics/blob/master/src/data_sources/quandl.jl

Ported to Python by Sylvain Barde

@author: sb636
"""

import re
import requests
import pandas as pd
from zipfile import ZipFile
from io import BytesIO
from datetime import date, timedelta


# Helper function for dowloading zipfiles
def zip_url_to_df(url):

    zip_response = requests.get(url)
    zipArchive = ZipFile(BytesIO(zip_response.content))
    fileName = zipArchive.namelist()[0]

    return pd.read_csv(zipArchive.open(fileName))


def fundamentals(api_key, dimension = 'MRY'):
    """
        fundamentals(api_key)
    
    Download the CORE US Fundamentals dataset from Sharadar via Quandl.
    
    Equity fundamentals data. Equity fundamentals are financial statement
    information (cash flow, earnings statements, balance sheets).
    
    To see an example, [here](https://uk.finance.yahoo.com/quote/MANU/financials?p=MANU) 
    you can find the fundamentals data for Manchester United football club (MANU).
    
    # Examples
    ```
    import quandl
    api_key = "-31swyRz8v4SoNL_zyYc"
    dataset = quandl.fundamentals(api_key)
    
    ```
    
    # Related data
    
    The dataset generated by `fundamentals` lists firms by their stock tickers
    (`AAPL` instead of Apple), and uses short codes to indicate the fundamentals
    (`rnd` instead of Research and Development).
    
    To download descriptions of the indicator codes, use
    ```
    import quandl
    julia> fundamental_indicators(api_key)
    
    ```
    Or if you just need to know a couple of indicators, go directly to the table
    [here](https://www.quandl.com/tables/SF1/SHARADAR-INDICATORS)
    
    To download a database of the tickers, company names and other information
    including industry and listing status, use
    ```
    import quandl
    dataset = quandl.metadata(api_key)

    ```
    """
    
    url = 'https://www.quandl.com/api/v3/datatables/SHARADAR/SF1.json?&qopts.export=true'
    values = {'dimension': dimension,
              'api_key':api_key}

    print("Downloading the following data:")
    print("Dataset: Sharadar CORE US Equities Bundle")
    print("Table:   CORE US Fundamentals")
    print("Source:  Quandl")
    print("URL:     https://www.quandl.com/tables/SFA/SHARADAR-SF1")
    
    try:
        print("Generating download link")
        response = requests.get(url, params=values)
        responseDict = response.json()
        url_ = responseDict['datatable_bulk_download']['file']['link']

        print("Downloading the dataset")
        df = zip_url_to_df(url_)
        return df
    
    except:
        print("I couldn't download the dataset. This could be due to one of the ")
        print("following issues:")
        print("")
        print(" 1. Make sure that you provide your API key, with double quote")
        print("    marks as follows:")
        print("          fundamentals(\"api_key_goes_here\")")
        print("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        print("    If you haven't received an API key for Quandl, inform your ")
        print("    instructor.")
        print(" 2. Make sure that you're connected to the internet.")
        print(" 3. Make sure that you can login to Quandl.com. ")
        print("    Check by going to the following URL:")
        print("    https://www.quandl.com/databases/SFA/data")
        print("    and check that you can open the datasets in your browser.")


def fundamental_indicators(api_key):
    """
        fundamental_indicators(api_key)
    
    Download the CORE US Fundamentals dataset from Sharadar via Quandl.
    
    Equity fundamentals data. Equity fundamentals are financial statement
    information (cash flow, earnings statements, balance sheets).
    
    To see an example, [here](https://uk.finance.yahoo.com/quote/MANU/financials?p=MANU) 
    you can find the fundamentals data for Manchester United football club (MANU).
    
    # Examples
    ```
    import quandl
    api_key = "-31swyRz8v4SoNL_zyYc"
    dataset = quandl.fundamentals(api_key)
    
    ```
    
    # Related data
    
    The dataset generated by `fundamentals` lists firms by their stock tickers
    (`AAPL` instead of Apple), and uses short codes to indicate the fundamentals
    (`rnd` instead of Research and Development).
    
    To download descriptions of the indicator codes, use
    ```
    import quandl
    dataset = quandl.fundamental_indicators(api_key)
    
    ```
    Or if you just need to know a couple of indicators, go directly to the table
    [here](https://www.quandl.com/tables/SF1/SHARADAR-INDICATORS)
    
    To download a database of the tickers, company names and other information
    including industry and listing status, use
    ```
    import quandl
    dataset = quandl.metadata(api_key)

    ```
    """
    
    url = 'https://www.quandl.com/api/v3/datatables/SHARADAR/INDICATORS.json?&qopts.export=true'
    values = {'api_key':api_key}

    print("Downloading the following data:")
    print("Dataset: Sharadar CORE US Equities Bundle")
    print("Table:   CORE US Fundamentals")
    print("Source:  Quandl")
    print("URL:     https://www.quandl.com/tables/SFA/SHARADAR-SF1")
    
    try:
        print("Generating download link")
        response = requests.get(url, params=values)
        responseDict = response.json()
        url_ = responseDict['datatable_bulk_download']['file']['link']

        print("Downloading the dataset")
        df = zip_url_to_df(url_)
        return df
    
    except:
        print("I couldn't download the dataset. This could be due to one of the ")
        print("following issues:")
        print("")
        print(" 1. Make sure that you provide your API key, with double quote")
        print("    marks as follows:")
        print("          fundamentals(\"api_key_goes_here\")")
        print("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        print("    If you haven't received an API key for Quandl, inform your ")
        print("    instructor.")
        print(" 2. Make sure that you're connected to the internet.")
        print(" 3. Make sure that you can login to Quandl.com. ")
        print("    Check by going to the following URL:")
        print("    https://www.quandl.com/databases/SFA/data")
        print("    and check that you can open the datasets in your browser.")


def events(api_key):
    """
    events(api_key)
    
    Download the CORE US Fundamentals Events dataset from Sharadar via Quandl.
    
    Equity events data. Equity events relate to SEC filings, where companies
    publicly announce major events including financial restatements, missed
    debt payments and so on.
    
    # Examples
    ```
    import quandl
    api_key = "-31swyRz8v4SoNL_zyYc"
    dataset = quandl.events(api_key)
    
    ```
    
    # Related data
    
    The dataset generated by `events` lists firms by their stock tickers
    (`AAPL` instead of Apple), and uses short codes to indicate the events
    (`13` instead of Bankruptcy or Receivership).
    
    A full list of event codes can be found 
    [here](https://www.sec.gov/fast-answers/answersform8khtm.html).
    
    To download a database of the tickers, company names and other information
    including industry and listing status, use
    ```
    import quandl
    dataset = quandl.metadata(api_key)

    ```
    """
    
    url  = 'https://www.quandl.com/api/v3/datatables/SHARADAR/EVENTS.json?&qopts.export=true'
    values = {'api_key':api_key}
    
    print("Downloading the following data:")
    print("Dataset: Sharadar CORE US Equities Bundle")
    print("Table:   CORE US Fundamentals Events")
    print("Source:  Quandl")
    print("URL:     https://www.quandl.com/tables/SFA/SHARADAR-EVENTS")
    
    try:       
        print("Generating download link")
        response = requests.get(url, params=values)
        responseDict = response.json()
        url_ = responseDict['datatable_bulk_download']['file']['link']

        print("Downloading the dataset")
        df = zip_url_to_df(url_)
        df['eventcodes'] = [re.split('\|',line) for line in df['eventcodes']]
        return df.explode('eventcodes').reset_index(drop=True)
    
    except:
        print("I couldn't download the dataset. This could be due to one of the ")
        print("following issues:")
        print("")
        print(" 1. Make sure that you provide your API key, with double quote")
        print("    marks as follows:")
        print("          events(\"api_key_goes_here\")")
        print("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        print("    If you haven't received an API key for Quandl, inform your ")
        print("    instructor.")
        print(" 2. Make sure that you're connected to the internet.")
        print(" 3. Make sure that you can login to Quandl.com. ")
        print("    Check by going to the following URL:")
        print("    https://www.quandl.com/tables/SFA/SHARADAR-EVENTS")
        print("    and check that you can open the datasets in your browser.")


def metadata(api_key):
    """
        metadata(api_key)
    
    Download the Tickers and Metadata dataset from Sharadar via Quandl.
    
    Metadata includes stock tickers, company names, industry codes, and related
    information.
    
    # Examples
    ```
    import quandl
    api_key = "-31swyRz8v4SoNL_zyYc"
    dataset = quandl.metadata(api_key)
    
    ```
    """
    
    url = 'https://www.quandl.com/api/v3/datatables/SHARADAR/TICKERS.json?&qopts.export=true'
    values = {'api_key':api_key}

    print("Downloading the following data:")
    print("Dataset: Sharadar CORE US Equities Bundle")
    print("Table:   Tickers and Metadata")
    print("Source:  Quandl")
    print("URL:     https://data.nasdaq.com/tables/SFA/SHARADAR-TICKERS")
    
    try:

        print("Generating download link")
        response = requests.get(url, params=values)
        responseDict = response.json()
        url_ = responseDict['datatable_bulk_download']['file']['link']

        print("Downloading the dataset")
        df = zip_url_to_df(url_)
        return df
    
    except:
        print("I couldn't download the dataset. This could be due to one of the ")
        print("following issues:")
        print("")
        print(" 1. Make sure that you provide your API key, with double quote")
        print("    marks as follows:")
        print("          metadata(\"api_key_goes_here\")")
        print("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        print("    If you haven't received an API key for Quandl, inform your ")
        print("    instructor.")
        print(" 2. Make sure that you're connected to the internet.")
        print(" 3. Make sure that you can login to Quandl.com. ")
        print("    Check by going to the following URL:")
        print("    https://www.quandl.com/databases/SFA/data")
        print("    and check that you can open the datasets in your browser.")


def stockprices(api_key, 
                ticker = '', 
                start_date = date.today() - timedelta(days = 356)):

    url = 'https://www.quandl.com/api/v3/datatables/SHARADAR/SEP.json?&qopts.export=true'
            
    values = {'ticker': ticker,
              'date.gte': start_date.strftime('%Y-%m-%d'),
              'api_key':api_key}
    if ticker == '':
        values.pop('ticker')

    print("api call = " + url)
    print("Downloading the following data:")
    print("Dataset: Sharadar CORE US Equities Bundle")
    print("Table:   Equity Prices")
    print("Source:  Quandl")
    print("URL:     https://data.nasdaq.com/tables/SFA/SHARADAR-SEP")
    print("This will take a few minutes.")
    try:

        print("Generating download link")
        response = requests.get(url, params=values)
        responseDict = response.json()
        url_ = responseDict['datatable_bulk_download']['file']['link']

        print("Downloading the dataset")
        df = zip_url_to_df(url_)
        return df.sort_values(['ticker','date'])
    
    except:
        print("I couldn't download the dataset. This could be due to one of the ")
        print("following issues:")
        print("")
        print(" 1. Make sure that you provide your API key, with double quote")
        print("    marks as follows:")
        print("          stockprices(\"api_key_goes_here\")")
        print("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        print("    If you haven't received an API key for Quandl, inform your ")
        print("    instructor.")
        print(" 2. Make sure that you're connected to the internet.")
        print(" 3. Make sure that you can login to Quandl.com. ")
        print("    Check by going to the following URL:")
        print("    https://www.quandl.com/databases/SFA/data")
        print("    and check that you can open the datasets in your browser.")


def fundprices(api_key, 
                ticker = '', 
                start_date = date.today() - timedelta(days = 356)):
    
    url = 'https://www.quandl.com/api/v3/datatables/SHARADAR/SFP.json?&qopts.export=true'

    values = {'ticker': ticker,
              'date.gte': start_date.strftime('%Y-%m-%d'),
              'api_key':api_key}
    if ticker == '':
        values.pop('ticker')

    print("api call = " + url)
    print("Downloading the following data:")
    print("Dataset: Sharadar CORE US Equities Bundle")
    print("Table:   Equity Prices")
    print("Source:  Quandl")
    print("URL:     https://data.nasdaq.com/tables/SFA/SHARADAR-SFP")
    print("This will take a few minutes.")
    try:

        print("Generating download link")
        response = requests.get(url, params=values)
        responseDict = response.json()
        url_ = responseDict['datatable_bulk_download']['file']['link']

        print("Downloading the dataset")
        df = zip_url_to_df(url_)
        return df.sort_values(['ticker','date'])
        
    except:
        print("I couldn't download the dataset. This could be due to one of the ")
        print("following issues:")
        print("")
        print(" 1. Make sure that you provide your API key, with double quote")
        print("    marks as follows:")
        print("          fundprices(\"api_key_goes_here\")")
        print("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        print("    If you haven't received an API key for Quandl, inform your ")
        print("    instructor.")
        print(" 2. Make sure that you're connected to the internet.")
        print(" 3. Make sure that you can login to Quandl.com. ")
        print("    Check by going to the following URL:")
        print("    https://www.quandl.com/databases/SFA/data")
        print("    and check that you can open the datasets in your browser.")
